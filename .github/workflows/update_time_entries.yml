# This is a basic workflow to help you get started with Actions

name: run main.py

on:
  schedule:
   - cron: '0 7 * * 2,3,5'
  workflow_dispatch: 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.PAT_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas requests

    - name: Set up DB folder
      run: |
        mkdir -p DB
      
    - name: Run scripts
      run: |
        python scripts/tasks.py
        python scripts/clients_time_entries.py
        python scripts/content_time_entries.py
        python scripts/dev_time_entries.py
        python scripts/non_billable_time_entries.py
        python scripts/off_page_content_time_entries.py
        python scripts/all_time_entries.py
        python scripts/private_time_entries.py
        

    - name: Upload DB files
      uses: actions/upload-artifact@v4
      with:
        name: sqlite-databases
        path: DB/

    - name: Upload final database as artifact (optional)
      uses: actions/upload-artifact@v4
      with:
        name: all_time_entries
        path: DB/all_time_entries.db
    
    - name: Upload CSV artifact
      uses: actions/upload-artifact@v4
      with:
        name: all_time_entries_csv
        path: DB/all_time_entries.csv

    - name: Commit and push CSV to repo
      run: |
        git config --global user.name "GitHub Action"
        git config --global user.email "action@github.com"
        git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}
        git pull origin main
        git add DB/all_time_entries.csv DB/private.csv DB/task_table.csv
        git commit -m "Auto-update CSV file [skip ci]" || echo "No changes to commit"
        git push origin main



